{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","setCurrentToDoItem","toDoItem","setState","currentToDoItem","saveToDoListItem","toDoList","state","handleClick","e","target","classList","toggle","removeItem","index","splice","onChange","event","value","onClick","this","class","map","item","style","display","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAyDeA,E,kDA3Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAbRC,mBAAqB,SAAAC,GACnB,EAAKC,SAAS,CACZC,gBAAiBF,KAUF,EANnBG,iBAAmB,SAAAH,GACjB,EAAKC,SAAS,CACZG,SAAS,GAAD,mBAAM,EAAKC,MAAMD,UAAjB,CAA2BJ,OAIpB,EASnBM,YAAc,SAAAC,GACZA,EAAEC,OAAOC,UAAUC,OAAO,kBAVT,EAanBC,WAAa,SAACC,GACZ,EAAKP,MAAMD,SAASS,OAAOD,EAAO,GAClC,EAAKX,SAAS,CAACG,SAAU,EAAKC,MAAMD,YAZpC,EAAKC,MAAQ,CACXH,gBAAiB,KACjBE,SAAU,IALK,E,0CAiBnB,WAAU,IAAD,OACP,OACE,gCACE,4CACA,iDACA,uBACEU,SAAU,SAAAC,GAAK,OAAI,EAAKhB,mBAAmBgB,EAAMP,OAAOQ,UAE1D,wBAAQC,QAAS,kBAAM,EAAKd,iBAAiB,EAAKE,MAAMH,kBAAxD,sBAGA,4BAAIgB,KAAKb,MAAMH,kBACf,4CACA,qBAAKiB,MAAM,QAAX,SACGD,KAAKb,MAAMD,SAASgB,KAAI,SAACC,EAAMT,GAAP,OACvB,gCACE,oBAAeK,QAAS,EAAKX,YAAagB,MAAO,CAACC,QAAS,gBAA3D,UAA6EF,EAAM,MAA3ET,GACR,wBAAQK,QAAS,EAAKN,WAAtB,mC,GA/CIa,IAAMC,WCWTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKlB,MAAM,MAAX,SACA,cAAC,EAAD,QAGFmB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0972fa28.chunk.js","sourcesContent":["import React from \"react\";\nclass App extends React.Component {\n  setCurrentToDoItem = toDoItem => {\n    this.setState({\n      currentToDoItem: toDoItem\n    });\n  };\n\n  saveToDoListItem = toDoItem => {\n    this.setState({\n      toDoList: [...this.state.toDoList, toDoItem]\n    });\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentToDoItem: null,\n      toDoList: []\n    };\n  }\n\n  handleClick = e => {\n    e.target.classList.toggle(\"strikeThrough\");\n  };\n\n  removeItem = (index)=> {\n    this.state.toDoList.splice(index, 1);\n    this.setState({toDoList: this.state.toDoList})\n  }\n  render() {\n    return (\n      <div>\n        <h1>To Do List</h1>\n        <label>To Do Item: </label>\n        <input\n          onChange={event => this.setCurrentToDoItem(event.target.value)}\n        />\n        <button onClick={() => this.saveToDoListItem(this.state.currentToDoItem)}>\n        Add Item\n        </button>\n        <p>{this.state.currentToDoItem}</p>\n        <p>To Do Items</p>\n        <div class=\"block\">\n          {this.state.toDoList.map((item, index) => (\n            <div>\n              <p key={index} onClick={this.handleClick} style={{display: \"inline-block\"}}>{item}{\" \"}</p>\n              <button onClick={this.removeItem}>delete</button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div class=\"App\">\n    <App></App>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}