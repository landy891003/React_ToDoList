{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","updateValue","event","setState","newtodo","target","value","todoItems","state","action","done","removeItem","item","index","indexOf","splice","todoList","todorows","map","type","checked","onChange","toggleDone","onClick","todo","render","userName","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6MAEqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IASRC,YAAY,SAACC,GACT,EAAKC,SAAS,CAACC,QAAQF,EAAMG,OAAOC,SAXtB,EAclBF,QAAQ,WACN,EAAKD,SAAS,CACZI,UAAU,GAAD,mBAAK,EAAKC,MAAMD,WAAhB,CACP,CAACE,OAAS,EAAKD,MAAMJ,QAAQM,MAAK,QAjBtB,EAqBlBC,WAAa,SAACC,GACZ,IAAIC,EAAM,EAAKL,MAAMD,UAAUO,QAAQF,GACvC,EAAKJ,MAAMD,UAAUQ,OAAOF,EAAO,GACnC,EAAKV,SAAS,CAACa,SAAU,EAAKR,MAAMD,aAxBpB,EA0BlBU,SAAS,kBACP,EAAKT,MAAMD,UAAUW,KAAI,SAACN,GAAD,OACvB,+BACI,6BAAKA,EAAKH,SACV,+BACE,uBACEU,KAAK,WACLC,QAASR,EAAKF,KACdW,SAAU,kBAAI,EAAKC,WAAWV,MAEhC,wBACEO,KAAK,YACLI,QAAS,kBAAI,EAAKZ,WAAWC,IAF/B,yBARGA,EAAKH,YA5BA,EA6ChBa,WAAW,SAACE,GAAD,OACT,EAAKrB,SAAS,CACZI,UAAU,EAAKC,MAAMD,UAAUW,KAAI,SAACN,GAAD,OAC/BA,EAAKH,SAAWe,EAAKf,OAArB,2BAAgCG,GAAhC,IAAqCF,MAAME,EAAKF,OAAME,QAhD9C,EAoDlBa,OAAS,kBACP,gCACE,4CACA,uBACInB,MAAO,EAAKE,MAAMJ,QAClBiB,SAAU,EAAKpB,cAEnB,wBAAQsB,QAAS,EAAKnB,QAAtB,iBAEA,gCACE,gCAAQ,EAAKa,mBA3DjB,EAAKT,MAAO,CACRkB,SAAS,QACTnB,UAAU,GACVH,QAAS,IANG,E,UADWuB,IAAMC,WCUxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9007237f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default class App extends React.Component{\n    constructor(props){\n      super(props);\n\n      this.state ={\n          userName:'landy',\n          todoItems:[],\n          newtodo :'',\n      };\n    }\n\n    updateValue=(event)=>{\n        this.setState({newtodo:event.target.value});\n    };\n    \n    newtodo=()=>{\n      this.setState({\n        todoItems:[...this.state.todoItems,\n          {action : this.state.newtodo,done:false},\n        ],\n      });\n    };\n    removeItem = (item)=> {\n      var index=this.state.todoItems.indexOf(item);\n      this.state.todoItems.splice(index, 1);\n      this.setState({todoList: this.state.todoItems})\n    }\n    todorows=()=>\n      this.state.todoItems.map((item)=>(\n        <tr key={item.action}>\n            <td>{item.action}</td>\n            <td>\n              <input\n                type=\"checkbox\"\n                checked={item.done}\n                onChange={()=>this.toggleDone(item)}\n              />\n              <button\n                type=\"deletebox\"\n                onClick={()=>this.removeItem(item)}>\n                delete\n              </button>\n            </td>\n        </tr>\n      ));\n    \n      toggleDone=(todo)=>\n        this.setState({\n          todoItems:this.state.todoItems.map((item)=>\n              item.action === todo.action?{...item,done:!item.done}:item\n          ),\n        });\n\n    render = () =>(\n      <div>\n        <h2>To Do List</h2>\n        <input \n            value={this.state.newtodo} \n            onChange={this.updateValue}\n        />\n        <button onClick={this.newtodo}>Add</button>\n        \n        <table>\n          <tbody>{this.todorows()}</tbody>\n        </table>\n      </div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}